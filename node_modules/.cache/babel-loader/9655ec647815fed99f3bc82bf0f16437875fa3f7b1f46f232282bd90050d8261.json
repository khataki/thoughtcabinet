{"ast":null,"code":"var _jsxFileName = \"/Users/evilillidan/Desktop/dev/thought-cabinet/src/components/ThoughtCabinet.js\",\n  _s = $RefreshSig$();\n// src/components/ThoughtCabinet.js\nimport React, { useState } from 'react';\nimport ThoughtList from './ThoughtList';\nimport ThoughtTree from './ThoughtTree';\nimport ThoughtDetails from './ThoughtDetails';\nimport AddThoughtForm from './AddThoughtForm';\nimport './ThoughtCabinet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThoughtCabinet = () => {\n  _s();\n  const [thoughts, setThoughts] = useState([{\n    id: 1,\n    title: 'Гнилом Лe Миньон',\n    details: 'Детали мысли 1',\n    image: 'path/to/image1.jpg'\n  }, {\n    id: 2,\n    title: 'Одинокая дорога домой',\n    details: 'Детали мысли 2',\n    image: 'path/to/image2.jpg'\n  }\n  // Add more thoughts\n  ]);\n  const [selectedThought, setSelectedThought] = useState(null);\n  const addThought = thought => {\n    setThoughts([...thoughts, {\n      ...thought,\n      id: thoughts.length + 1\n    }]);\n  };\n  const updateThought = updatedThought => {\n    setThoughts(thoughts.map(thought => thought.id === updatedThought.id ? updatedThought : thought));\n  };\n  const removeThought = id => {\n    setThoughts(thoughts.filter(thought => thought.id !== id));\n  };\n  const selectThought = thought => {\n    setSelectedThought(thought);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"thought-cabinet\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thought-list-container\",\n      children: /*#__PURE__*/_jsxDEV(ThoughtList, {\n        thoughts: thoughts,\n        selectThought: selectThought,\n        removeThought: removeThought\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thought-tree-container\",\n      children: /*#__PURE__*/_jsxDEV(ThoughtTree, {\n        thoughts: thoughts,\n        selectThought: selectThought\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thought-details-container\",\n      children: selectedThought ? /*#__PURE__*/_jsxDEV(ThoughtDetails, {\n        thought: selectedThought,\n        updateThought: updateThought\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(AddThoughtForm, {\n        addThought: addThought\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(ThoughtCabinet, \"m1D8sI8JQoV2GVGcfVnqZ5z/ZY8=\");\n_c = ThoughtCabinet;\nexport default ThoughtCabinet;\nvar _c;\n$RefreshReg$(_c, \"ThoughtCabinet\");","map":{"version":3,"names":["React","useState","ThoughtList","ThoughtTree","ThoughtDetails","AddThoughtForm","jsxDEV","_jsxDEV","ThoughtCabinet","_s","thoughts","setThoughts","id","title","details","image","selectedThought","setSelectedThought","addThought","thought","length","updateThought","updatedThought","map","removeThought","filter","selectThought","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/evilillidan/Desktop/dev/thought-cabinet/src/components/ThoughtCabinet.js"],"sourcesContent":["// src/components/ThoughtCabinet.js\nimport React, { useState } from 'react';\nimport ThoughtList from './ThoughtList';\nimport ThoughtTree from './ThoughtTree';\nimport ThoughtDetails from './ThoughtDetails';\nimport AddThoughtForm from './AddThoughtForm';\nimport './ThoughtCabinet.css';\n\nconst ThoughtCabinet = () => {\n  const [thoughts, setThoughts] = useState([\n    { id: 1, title: 'Гнилом Лe Миньон', details: 'Детали мысли 1', image: 'path/to/image1.jpg' },\n    { id: 2, title: 'Одинокая дорога домой', details: 'Детали мысли 2', image: 'path/to/image2.jpg' },\n    // Add more thoughts\n  ]);\n  const [selectedThought, setSelectedThought] = useState(null);\n\n  const addThought = (thought) => {\n    setThoughts([...thoughts, { ...thought, id: thoughts.length + 1 }]);\n  };\n\n  const updateThought = (updatedThought) => {\n    setThoughts(thoughts.map(thought => thought.id === updatedThought.id ? updatedThought : thought));\n  };\n\n  const removeThought = (id) => {\n    setThoughts(thoughts.filter(thought => thought.id !== id));\n  };\n\n  const selectThought = (thought) => {\n    setSelectedThought(thought);\n  };\n\n  return (\n    <div className=\"thought-cabinet\">\n      <div className=\"thought-list-container\">\n        <ThoughtList thoughts={thoughts} selectThought={selectThought} removeThought={removeThought} />\n      </div>\n      <div className=\"thought-tree-container\">\n        <ThoughtTree thoughts={thoughts} selectThought={selectThought} />\n      </div>\n      <div className=\"thought-details-container\">\n        {selectedThought ? (\n          <ThoughtDetails thought={selectedThought} updateThought={updateThought} />\n        ) : (\n          <AddThoughtForm addThought={addThought} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ThoughtCabinet;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}