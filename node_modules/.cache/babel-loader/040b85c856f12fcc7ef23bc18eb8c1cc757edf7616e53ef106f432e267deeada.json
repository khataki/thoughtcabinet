{"ast":null,"code":"var _jsxFileName = \"/Users/evilillidan/Desktop/dev/thought-cabinet/src/components/ThoughtTree.js\",\n  _s = $RefreshSig$();\n// src/components/ThoughtTree.js\nimport React, { useRef, useEffect, useState } from 'react';\nimport { motion } from 'framer-motion';\nimport './ThoughtTree.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThoughtTree = ({\n  thoughts,\n  connections,\n  selectThought\n}) => {\n  _s();\n  const [coords, setCoords] = useState({});\n  const refs = useRef({});\n  useEffect(() => {\n    const newCoords = {};\n    Object.keys(refs.current).forEach(id => {\n      const element = refs.current[id];\n      const rect = element.getBoundingClientRect();\n      newCoords[id] = {\n        x: rect.left + rect.width / 2,\n        y: rect.top + rect.height / 2\n      };\n    });\n    setCoords(newCoords);\n  }, [thoughts, connections]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"thought-tree\",\n    children: [thoughts.map((thought, index) => /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"thought-node\",\n      ref: el => refs.current[thought.id] = el,\n      initial: {\n        opacity: 0\n      },\n      animate: {\n        opacity: 1\n      },\n      transition: {\n        delay: index * 0.2\n      },\n      onClick: () => selectThought(thought),\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: thought.image,\n        alt: thought.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)\n    }, thought.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \"connection-lines\",\n      children: connections.map((connection, index) => {\n        const fromCoords = coords[connection.from];\n        const toCoords = coords[connection.to];\n        if (!fromCoords || !toCoords) return null;\n        return /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: fromCoords.x,\n          y1: fromCoords.y,\n          x2: toCoords.x,\n          y2: toCoords.y,\n          stroke: \"white\",\n          strokeWidth: \"2\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(ThoughtTree, \"nYbG3xLeq5RPQ+BntgLTJB1wDa4=\");\n_c = ThoughtTree;\nexport default ThoughtTree;\nvar _c;\n$RefreshReg$(_c, \"ThoughtTree\");","map":{"version":3,"names":["React","useRef","useEffect","useState","motion","jsxDEV","_jsxDEV","ThoughtTree","thoughts","connections","selectThought","_s","coords","setCoords","refs","newCoords","Object","keys","current","forEach","id","element","rect","getBoundingClientRect","x","left","width","y","top","height","className","children","map","thought","index","div","ref","el","initial","opacity","animate","transition","delay","onClick","src","image","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","connection","fromCoords","from","toCoords","to","x1","y1","x2","y2","stroke","strokeWidth","_c","$RefreshReg$"],"sources":["/Users/evilillidan/Desktop/dev/thought-cabinet/src/components/ThoughtTree.js"],"sourcesContent":["// src/components/ThoughtTree.js\nimport React, { useRef, useEffect, useState } from 'react';\nimport { motion } from 'framer-motion';\nimport './ThoughtTree.css';\n\nconst ThoughtTree = ({ thoughts, connections, selectThought }) => {\n  const [coords, setCoords] = useState({});\n  const refs = useRef({});\n\n  useEffect(() => {\n    const newCoords = {};\n    Object.keys(refs.current).forEach(id => {\n      const element = refs.current[id];\n      const rect = element.getBoundingClientRect();\n      newCoords[id] = {\n        x: rect.left + rect.width / 2,\n        y: rect.top + rect.height / 2,\n      };\n    });\n    setCoords(newCoords);\n  }, [thoughts, connections]);\n\n  return (\n    <div className=\"thought-tree\">\n      {thoughts.map((thought, index) => (\n        <motion.div\n          key={thought.id}\n          className=\"thought-node\"\n          ref={el => refs.current[thought.id] = el}\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          transition={{ delay: index * 0.2 }}\n          onClick={() => selectThought(thought)}\n        >\n          <img src={thought.image} alt={thought.title} />\n        </motion.div>\n      ))}\n      <svg className=\"connection-lines\">\n        {connections.map((connection, index) => {\n          const fromCoords = coords[connection.from];\n          const toCoords = coords[connection.to];\n          if (!fromCoords || !toCoords) return null;\n\n          return (\n            <line\n              key={index}\n              x1={fromCoords.x}\n              y1={fromCoords.y}\n              x2={toCoords.x}\n              y2={toCoords.y}\n              stroke=\"white\"\n              strokeWidth=\"2\"\n            />\n          );\n        })}\n      </svg>\n    </div>\n  );\n};\n\nexport default ThoughtTree;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}