{"ast":null,"code":"var _jsxFileName = \"/Users/evilillidan/Desktop/dev/thought-cabinet/src/components/ThoughtCabinet.js\",\n  _s = $RefreshSig$();\n// src/components/ThoughtCabinet.js\nimport React, { useState, useEffect } from 'react';\nimport ThoughtList from './ThoughtList';\nimport ThoughtTree from './ThoughtTree';\nimport ThoughtDetails from './ThoughtDetails';\nimport AddThoughtForm from './AddThoughtForm';\nimport ConnectionForm from './ConnectionForm'; // Импортируем ConnectionForm\nimport './ThoughtCabinet.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ThoughtCabinet = () => {\n  _s();\n  const [thoughts, setThoughts] = useState(() => {\n    const savedThoughts = localStorage.getItem('thoughts');\n    return savedThoughts ? JSON.parse(savedThoughts) : [{\n      id: 1,\n      title: 'Гнилом Лe Миньон',\n      details: 'Детали мысли 1',\n      image: 'path/to/image1.jpg'\n    }, {\n      id: 2,\n      title: 'Одинокая дорога домой',\n      details: 'Детали мысли 2',\n      image: 'path/to/image2.jpg'\n    }];\n  });\n  const [connections, setConnections] = useState(() => {\n    const savedConnections = localStorage.getItem('connections');\n    return savedConnections ? JSON.parse(savedConnections) : [];\n  });\n  const [selectedThought, setSelectedThought] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isAdding, setIsAdding] = useState(true); // Начальное состояние - добавление новой мысли\n\n  useEffect(() => {\n    localStorage.setItem('thoughts', JSON.stringify(thoughts));\n  }, [thoughts]);\n  useEffect(() => {\n    localStorage.setItem('connections', JSON.stringify(connections));\n  }, [connections]);\n  const addThought = thought => {\n    setThoughts([...thoughts, {\n      ...thought,\n      id: thoughts.length + 1\n    }]);\n    setIsAdding(false);\n    setSelectedThought(null);\n  };\n  const updateThought = updatedThought => {\n    setThoughts(thoughts.map(thought => thought.id === updatedThought.id ? updatedThought : thought));\n    setIsEditing(false);\n    setSelectedThought(updatedThought);\n  };\n  const removeThought = id => {\n    setThoughts(thoughts.filter(thought => thought.id !== id));\n    setSelectedThought(null);\n    setIsEditing(false);\n    setIsAdding(true);\n    setConnections(connections.filter(connection => connection.from !== id && connection.to !== id));\n  };\n  const selectThought = thought => {\n    setSelectedThought(thought);\n    setIsEditing(false);\n    setIsAdding(false);\n  };\n  const startEditing = () => {\n    setIsEditing(true);\n    setIsAdding(false);\n  };\n  const cancelEditing = () => {\n    setIsEditing(false);\n  };\n  const startAdding = () => {\n    setIsAdding(true);\n    setSelectedThought(null);\n    setIsEditing(false);\n  };\n  const addConnection = (fromId, toId) => {\n    setConnections([...connections, {\n      from: fromId,\n      to: toId\n    }]);\n  };\n  const removeConnection = (fromId, toId) => {\n    setConnections(connections.filter(connection => connection.from !== fromId || connection.to !== toId));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"thought-cabinet\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thought-list-container\",\n      children: /*#__PURE__*/_jsxDEV(ThoughtList, {\n        thoughts: thoughts,\n        selectThought: selectThought,\n        removeThought: removeThought\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thought-tree-container\",\n      children: /*#__PURE__*/_jsxDEV(ThoughtTree, {\n        thoughts: thoughts,\n        connections: connections,\n        selectThought: selectThought\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thought-details-container\",\n      children: [isEditing ? /*#__PURE__*/_jsxDEV(ThoughtDetails, {\n        thought: selectedThought,\n        updateThought: updateThought,\n        cancelEditing: cancelEditing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this) : isAdding ? /*#__PURE__*/_jsxDEV(AddThoughtForm, {\n        addThought: addThought\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this) : selectedThought && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startEditing,\n          children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: selectedThought.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: selectedThought.details\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startAdding,\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043D\\u043E\\u0432\\u0443\\u044E \\u043C\\u044B\\u0441\\u043B\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ConnectionForm, {\n          thoughts: thoughts,\n          selectedThought: selectedThought,\n          addConnection: addConnection,\n          removeConnection: removeConnection\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), !isAdding && !isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startAdding,\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043D\\u043E\\u0432\\u0443\\u044E \\u043C\\u044B\\u0441\\u043B\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(ThoughtCabinet, \"RiDu50GTNkpYjt8Yjmn2gbKL0O4=\");\n_c = ThoughtCabinet;\nexport default ThoughtCabinet;\nvar _c;\n$RefreshReg$(_c, \"ThoughtCabinet\");","map":{"version":3,"names":["React","useState","useEffect","ThoughtList","ThoughtTree","ThoughtDetails","AddThoughtForm","ConnectionForm","jsxDEV","_jsxDEV","Fragment","_Fragment","ThoughtCabinet","_s","thoughts","setThoughts","savedThoughts","localStorage","getItem","JSON","parse","id","title","details","image","connections","setConnections","savedConnections","selectedThought","setSelectedThought","isEditing","setIsEditing","isAdding","setIsAdding","setItem","stringify","addThought","thought","length","updateThought","updatedThought","map","removeThought","filter","connection","from","to","selectThought","startEditing","cancelEditing","startAdding","addConnection","fromId","toId","removeConnection","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/evilillidan/Desktop/dev/thought-cabinet/src/components/ThoughtCabinet.js"],"sourcesContent":["// src/components/ThoughtCabinet.js\nimport React, { useState, useEffect } from 'react';\nimport ThoughtList from './ThoughtList';\nimport ThoughtTree from './ThoughtTree';\nimport ThoughtDetails from './ThoughtDetails';\nimport AddThoughtForm from './AddThoughtForm';\nimport ConnectionForm from './ConnectionForm'; // Импортируем ConnectionForm\nimport './ThoughtCabinet.css';\n\nconst ThoughtCabinet = () => {\n  const [thoughts, setThoughts] = useState(() => {\n    const savedThoughts = localStorage.getItem('thoughts');\n    return savedThoughts ? JSON.parse(savedThoughts) : [\n      { id: 1, title: 'Гнилом Лe Миньон', details: 'Детали мысли 1', image: 'path/to/image1.jpg' },\n      { id: 2, title: 'Одинокая дорога домой', details: 'Детали мысли 2', image: 'path/to/image2.jpg' },\n    ];\n  });\n  const [connections, setConnections] = useState(() => {\n    const savedConnections = localStorage.getItem('connections');\n    return savedConnections ? JSON.parse(savedConnections) : [];\n  });\n  const [selectedThought, setSelectedThought] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isAdding, setIsAdding] = useState(true); // Начальное состояние - добавление новой мысли\n\n  useEffect(() => {\n    localStorage.setItem('thoughts', JSON.stringify(thoughts));\n  }, [thoughts]);\n\n  useEffect(() => {\n    localStorage.setItem('connections', JSON.stringify(connections));\n  }, [connections]);\n\n  const addThought = (thought) => {\n    setThoughts([...thoughts, { ...thought, id: thoughts.length + 1 }]);\n    setIsAdding(false);\n    setSelectedThought(null);\n  };\n\n  const updateThought = (updatedThought) => {\n    setThoughts(thoughts.map(thought => thought.id === updatedThought.id ? updatedThought : thought));\n    setIsEditing(false);\n    setSelectedThought(updatedThought);\n  };\n\n  const removeThought = (id) => {\n    setThoughts(thoughts.filter(thought => thought.id !== id));\n    setSelectedThought(null);\n    setIsEditing(false);\n    setIsAdding(true);\n    setConnections(connections.filter(connection => connection.from !== id && connection.to !== id));\n  };\n\n  const selectThought = (thought) => {\n    setSelectedThought(thought);\n    setIsEditing(false);\n    setIsAdding(false);\n  };\n\n  const startEditing = () => {\n    setIsEditing(true);\n    setIsAdding(false);\n  };\n\n  const cancelEditing = () => {\n    setIsEditing(false);\n  };\n\n  const startAdding = () => {\n    setIsAdding(true);\n    setSelectedThought(null);\n    setIsEditing(false);\n  };\n\n  const addConnection = (fromId, toId) => {\n    setConnections([...connections, { from: fromId, to: toId }]);\n  };\n\n  const removeConnection = (fromId, toId) => {\n    setConnections(connections.filter(connection => connection.from !== fromId || connection.to !== toId));\n  };\n\n  return (\n    <div className=\"thought-cabinet\">\n      <div className=\"thought-list-container\">\n        <ThoughtList thoughts={thoughts} selectThought={selectThought} removeThought={removeThought} />\n      </div>\n      <div className=\"thought-tree-container\">\n        <ThoughtTree thoughts={thoughts} connections={connections} selectThought={selectThought} />\n      </div>\n      <div className=\"thought-details-container\">\n        {isEditing ? (\n          <ThoughtDetails thought={selectedThought} updateThought={updateThought} cancelEditing={cancelEditing} />\n        ) : isAdding ? (\n          <AddThoughtForm addThought={addThought} />\n        ) : (\n          selectedThought && (\n            <>\n              <button onClick={startEditing}>Редактировать</button>\n              <div>\n                <h2>{selectedThought.title}</h2>\n                <p>{selectedThought.details}</p>\n              </div>\n              <button onClick={startAdding}>Добавить новую мысль</button>\n              <ConnectionForm thoughts={thoughts} selectedThought={selectedThought} addConnection={addConnection} removeConnection={removeConnection} />\n            </>\n          )\n        )}\n        {!isAdding && !isEditing && <button onClick={startAdding}>Добавить новую мысль</button>}\n      </div>\n    </div>\n  );\n};\n\nexport default ThoughtCabinet;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}