{"ast":null,"code":"var _jsxFileName = \"/Users/evilillidan/Desktop/dev/thought-cabinet/src/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  setAuthToken\n}) => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.get('http://localhost:5000/users', {\n        params: {\n          email,\n          password\n        }\n      });\n      if (response.data.length > 0) {\n        const user = response.data[0];\n        const token = btoa(JSON.stringify({\n          id: user.id,\n          email: user.email\n        }));\n        localStorage.setItem('token', token);\n        setAuthToken(token);\n        navigate('/cabinet');\n      } else {\n        alert('Invalid credentials');\n      }\n    } catch (error) {\n      console.error('Error logging in', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleLogin,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"OqFWRqNCJ3BNGyYdED5qKBGtbCw=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","Login","setAuthToken","_s","email","setEmail","password","setPassword","navigate","handleLogin","e","preventDefault","response","get","params","data","length","user","token","btoa","JSON","stringify","id","localStorage","setItem","alert","error","console","onSubmit","children","type","placeholder","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/evilillidan/Desktop/dev/thought-cabinet/src/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nconst Login = ({ setAuthToken }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await axios.get('http://localhost:5000/users', {\n        params: {\n          email,\n          password\n        }\n      });\n\n      if (response.data.length > 0) {\n        const user = response.data[0];\n        const token = btoa(JSON.stringify({ id: user.id, email: user.email }));\n        localStorage.setItem('token', token);\n        setAuthToken(token);\n        navigate('/cabinet');\n      } else {\n        alert('Invalid credentials');\n      }\n    } catch (error) {\n      console.error('Error logging in', error);\n    }\n  };\n\n  return (\n    <form onSubmit={handleLogin}>\n      <input\n        type=\"email\"\n        placeholder=\"Email\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n        required\n      />\n      <input\n        type=\"password\"\n        placeholder=\"Password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n        required\n      />\n      <button type=\"submit\">Login</button>\n    </form>\n  );\n};\n\nexport default Login;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,KAAK,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMY,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,MAAMW,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,6BAA6B,EAAE;QAC9DC,MAAM,EAAE;UACNV,KAAK;UACLE;QACF;MACF,CAAC,CAAC;MAEF,IAAIM,QAAQ,CAACG,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;QAC5B,MAAMC,IAAI,GAAGL,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC;QAC7B,MAAMG,KAAK,GAAGC,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC;UAAEC,EAAE,EAAEL,IAAI,CAACK,EAAE;UAAElB,KAAK,EAAEa,IAAI,CAACb;QAAM,CAAC,CAAC,CAAC;QACtEmB,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEN,KAAK,CAAC;QACpChB,YAAY,CAACgB,KAAK,CAAC;QACnBV,QAAQ,CAAC,UAAU,CAAC;MACtB,CAAC,MAAM;QACLiB,KAAK,CAAC,qBAAqB,CAAC;MAC9B;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IAC1C;EACF,CAAC;EAED,oBACE1B,OAAA;IAAM4B,QAAQ,EAAEnB,WAAY;IAAAoB,QAAA,gBAC1B7B,OAAA;MACE8B,IAAI,EAAC,OAAO;MACZC,WAAW,EAAC,OAAO;MACnBC,KAAK,EAAE5B,KAAM;MACb6B,QAAQ,EAAGvB,CAAC,IAAKL,QAAQ,CAACK,CAAC,CAACwB,MAAM,CAACF,KAAK,CAAE;MAC1CG,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACFvC,OAAA;MACE8B,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAE1B,QAAS;MAChB2B,QAAQ,EAAGvB,CAAC,IAAKH,WAAW,CAACG,CAAC,CAACwB,MAAM,CAACF,KAAK,CAAE;MAC7CG,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACFvC,OAAA;MAAQ8B,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEX,CAAC;AAACpC,EAAA,CAhDIF,KAAK;EAAA,QAGQH,WAAW;AAAA;AAAA0C,EAAA,GAHxBvC,KAAK;AAkDX,eAAeA,KAAK;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}